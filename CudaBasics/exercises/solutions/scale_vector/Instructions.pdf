%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/Contents 12 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 11 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Outlines 8 0 R /PageLabels 13 0 R /PageMode /UseNone /Pages 11 0 R /Type /Catalog
>>
endobj
7 0 obj
<<
/Author () /CreationDate (D:20180416153629-01'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20180416153629-01'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (Instructions) /Trapped /False
>>
endobj
8 0 obj
<<
/Count 2 /First 9 0 R /Last 10 0 R /Type /Outlines
>>
endobj
9 0 obj
<<
/Dest [ 5 0 R /XYZ 62.69291 695.0236 0 ] /Next 10 0 R /Parent 8 0 R /Title (Data transfer with unified memory)
>>
endobj
10 0 obj
<<
/Dest [ 5 0 R /XYZ 62.69291 456.4236 0 ] /Parent 8 0 R /Prev 9 0 R /Title (Data transfer without unified memory)
>>
endobj
11 0 obj
<<
/Count 1 /Kids [ 5 0 R ] /Type /Pages
>>
endobj
12 0 obj
<<
/Length 4527
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 177.7149 0 Td (Instructions) Tj T* -177.7149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 707.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.069431 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this exercise, we'll scale a vector \(array\) of single precision numbers by a scalar. You'll learn how to) Tj T* 0 Tw (allocate memory on the GPU and transfer data to and from the GPU.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 674.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Data transfer with unified memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 644.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.179398 Tw 12 TL /F1 10 Tf 0 0 0 rg (Take a look at the file ) Tj /F3 10 Tf 0 0 0 rg (scale_vector_um.cu) Tj /F1 10 Tf 0 0 0 rg (. It contains a number of todos. To compile and run this) Tj T* 0 Tw (exercise you need to load CUDA: ) Tj /F3 10 Tf 0 0 0 rg (module) Tj ( ) Tj (load) Tj ( ) Tj (cuda/) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 626.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For this exercise, you'll use ) Tj /F3 10 Tf 0 0 0 rg (cudaMallocManaged) Tj /F1 10 Tf 0 0 0 rg ( to allocate memory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 592.8236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
.960784 .960784 .862745 rg
n 0 0 102 12 re f*
.960784 .960784 .862745 rg
n 102 0 6 12 re f*
.960784 .960784 .862745 rg
n 108 0 6 12 re f*
.960784 .960784 .862745 rg
n 114 0 12 12 re f*
.960784 .960784 .862745 rg
n 132 0 36 12 re f*
.960784 .960784 .862745 rg
n 168 0 6 12 re f*
.960784 .960784 .862745 rg
n 180 0 36 12 re f*
.960784 .960784 .862745 rg
n 222 0 24 12 re f*
.960784 .960784 .862745 rg
n 246 0 6 12 re f*
.960784 .960784 .862745 rg
n 258 0 48 12 re f*
.960784 .960784 .862745 rg
n 312 0 18 12 re f*
.960784 .960784 .862745 rg
n 336 0 30 12 re f*
.960784 .960784 .862745 rg
n 366 0 6 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (cudaMallocManaged) Tj 0 0 0 rg (\() Tj 0 0 0 rg (T) Tj .4 .4 .4 rg (**) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (devPtr) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (size_t) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (size) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (unsigned) Tj 0 0 0 rg ( ) Tj .690196 0 .25098 rg (int) Tj 0 0 0 rg ( ) Tj 0 0 0 rg (flags) Tj 0 0 0 rg (\)) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 572.8236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Like most CUDA functions, ) Tj /F3 10 Tf 0 0 0 rg (cudaMallocManaged) Tj /F1 10 Tf 0 0 0 rg ( returns ) Tj /F3 10 Tf 0 0 0 rg (cudaError_t) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 554.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (See the source for more todos. For compilation, use) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 521.6236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (make) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 501.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (To run your code, call ) Tj /F3 10 Tf 0 0 0 rg (bsub) Tj /F1 10 Tf 0 0 0 rg ( with the correct parameters. A shortcut is given via) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 468.4236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (make run) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 435.4236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Data transfer without unified memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 393.4236 cm
q
BT 1 0 0 1 0 26 Tm .884104 Tw 12 TL /F1 10 Tf 0 0 0 rg (Unified memory requires a chip with capability 3.5 \(Kepler and up\). Older GPUs can't be used this way.) Tj T* 0 Tw .038488 Tw (See ) Tj /F3 10 Tf 0 0 0 rg (scale_vector.cu) Tj /F1 10 Tf 0 0 0 rg ( for things that need to be done and the slides for the API. In case you want to try) Tj T* 0 Tw (out this version, compile it with:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 360.2236 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 468.6898 24 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (make scale_vector) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 62.69291 340.2236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Submit to the batch system similarly as shown in above's ) Tj /F3 10 Tf 0 0 0 rg (make) Tj ( ) Tj (run) Tj /F1 10 Tf 0 0 0 rg ( invocation.) Tj T* ET
Q
Q
 
endstream
endobj
13 0 obj
<<
/Nums [ 0 14 0 R ]
>>
endobj
14 0 obj
<<
/S /D /St 1
>>
endobj
xref
0 15
0000000000 65535 f 
0000000073 00000 n 
0000000124 00000 n 
0000000231 00000 n 
0000000343 00000 n 
0000000448 00000 n 
0000000653 00000 n 
0000000757 00000 n 
0000001026 00000 n 
0000001098 00000 n 
0000001230 00000 n 
0000001365 00000 n 
0000001425 00000 n 
0000006004 00000 n 
0000006045 00000 n 
trailer
<<
/ID 
[<c91a206aa2cd6bc4503267bb1b5efd35><c91a206aa2cd6bc4503267bb1b5efd35>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 7 0 R
/Root 6 0 R
/Size 15
>>
startxref
6079
%%EOF
